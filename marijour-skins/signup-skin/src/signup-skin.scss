// ✅ 원본 앱의 정확한 디자인 복제
// Tailwind v4와 동일한 CSS 변수 및 스타일 적용

/* 테마 변수 정의 (원본과 동일) */
:root {
    /* 컬러 */
    --color-primary: #89a1be;
    --color-toss-pay: #4780ef;
    --color-success: #47c288;
    --color-error: #ff2e00;
    --color-black: #292e2f;

    /* 폰트 사이즈 (기본) */
    --font-size-xs: 0.75rem;
    --font-size-sm: 0.875rem;
    --font-size-base: 1rem;
    --font-size-lg: 1.125rem;
    --font-size-xl: 1.25rem;
    --font-size-2xl: 1.375rem;
    --font-size-3xl: 1.75rem;
    --font-size-4xl: 2.25rem;
}

@media (min-width: 768px) {
    :root {
        --font-size-lg: 1.125rem;
        --font-size-xl: 1.375rem;
        --font-size-2xl: 1.75rem;
        --font-size-3xl: 2.25rem;
        --font-size-4xl: 3rem;
    }
}

/* Base styles */
* {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: 'Pretendard', 'Inter', ui-sans-serif, system-ui, sans-serif;
    color: var(--color-black);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
}

button {
    cursor: pointer;
}

// ✅ 원본 앱과 동일한 globalWrapper
.globalWrapper {
    max-width: 1400px;
    margin: 0 auto;
    padding-left: 1.25rem; /* px-5 */
    padding-right: 1.25rem;
}

@media (min-width: 768px) {
    .globalWrapper {
        padding-left: 2.5rem; /* md:px-10 */
        padding-right: 2.5rem;
    }
}

// Flexbox utilities (원본과 동일)
.flex { display: flex; }
.flex-col { flex-direction: column; }
.items-center { align-items: center; }
.items-start { align-items: flex-start; }
.justify-center { justify-content: center; }
.space-x-3 > * + * { margin-left: 0.75rem; }
.space-y-6 > * + * { margin-top: 1.5rem; }
.space-y-5 > * + * { margin-top: 1.25rem; }
.gap-2 { gap: 0.5rem; }

// Sizing
.w-full { width: 100%; }
.max-w-\[480px\] { max-width: 480px; }
.h-\[1px\] { height: 1px; }
.w-4 { width: 1rem; }
.h-4 { height: 1rem; }
.w-\[20px\] { width: 20px; }
.h-\[20px\] { height: 20px; }
.w-\[18px\] { width: 18px; }
.h-\[18px\] { height: 18px; }

// Padding & Margin (원본과 동일)
.py-8 { padding-top: 2rem; padding-bottom: 2rem; }
.py-13 { padding-top: 3.25rem; padding-bottom: 3.25rem; }
.pt-5 { padding-top: 1.25rem; }
.px-4\.5 { padding-left: 1.125rem; padding-right: 1.125rem; }
.py-3\.5 { padding-top: 0.875rem; padding-bottom: 0.875rem; }
.px-4 { padding-left: 1rem; padding-right: 1rem; }
.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }
.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
.p-1 { padding: 0.25rem; }
.p-0 { padding: 0; }
.mb-2 { margin-bottom: 0.5rem; }
.mb-5 { margin-bottom: 1.25rem; }
.mt-2 { margin-top: 0.5rem; }
.mt-1 { margin-top: 0.25rem; }
.ml-1 { margin-left: 0.25rem; }
.ml-2 { margin-left: 0.5rem; }
.my-10 { margin-top: 2.5rem; margin-bottom: 2.5rem; }
.mt-5 { margin-top: 1.25rem; }

@media (min-width: 768px) {
    .md\:py-13 { padding-top: 3.25rem; padding-bottom: 3.25rem; }
    .md\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
}

// Text styles (원본 CSS 변수 사용)
.text-3xl { font-size: var(--font-size-3xl); line-height: 2.25rem; }
.text-sm { font-size: var(--font-size-sm); line-height: 1.25rem; }
.text-center { text-align: center; }
.font-serif { font-family: 'Noto Serif KR', ui-serif, Georgia, Cambria, 'Times New Roman', Times, serif; }
.font-sans { font-family: 'Pretendard', 'Inter', ui-sans-serif, system-ui, sans-serif; }
.font-medium { font-weight: 500; }
.font-bold { font-weight: 700; }

// Colors (원본 CSS 변수 사용)
.text-red-500 { color: var(--color-error); }
.text-green-500 { color: var(--color-success); }
.text-gray-400 { color: rgb(156 163 175); }
.text-gray-500 { color: rgb(107 114 128); }
.text-primary { color: var(--color-primary); }
.text-black { color: var(--color-black); }
.text-black\/40 { color: color-mix(in srgb, var(--color-black) 40%, transparent); }
.text-black\/20 { color: color-mix(in srgb, var(--color-black) 20%, transparent); }
.text-black\/60 { color: color-mix(in srgb, var(--color-black) 60%, transparent); }
.text-error { color: var(--color-error); }
.text-success { color: var(--color-success); }
.bg-black\/10 { background-color: rgb(0 0 0 / 0.1); }
.bg-black\/3 { background-color: color-mix(in srgb, var(--color-black) 3%, transparent); }
.bg-primary { background-color: var(--color-primary); }
.bg-white { background-color: white; }
.bg-transparent { background-color: transparent; }
.text-white { color: white; }
.bg-gray-300 { background-color: rgb(209 213 219); }
.bg-gray-200 { background-color: rgb(229 231 235); }
.text-gray-800 { color: rgb(31 41 55); }
.bg-gray-100 { background-color: rgb(243 244 246); }
.border-gray-300 { border-color: rgb(209 213 219); }
.border-black\/10 { border-color: color-mix(in srgb, var(--color-black) 10%, transparent); }
.border-black\/20 { border-color: color-mix(in srgb, var(--color-black) 20%, transparent); }
.border-primary { border-color: var(--color-primary); }

// Border & Border Radius
.border { border-width: 1px; }
.border-0 { border-width: 0; }
.rounded-lg { border-radius: 0.5rem; }
.rounded { border-radius: 0.25rem; }

// Background & Opacity
.opacity-0 { opacity: 0; }
.opacity-100 { opacity: 1; }

// Focus states (원본 primary 컬러 사용)
.focus\:outline-none:focus { outline: 2px solid transparent; outline-offset: 2px; }
.focus\:ring-2:focus { 
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); 
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); 
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000); 
}
.focus\:ring-primary:focus { --tw-ring-color: var(--color-primary); }
.focus\:border-transparent:focus { border-color: transparent; }

// Hover states (원본과 동일한 hover 클래스)
.hover\:bg-primary\/90:hover { background-color: color-mix(in srgb, var(--color-primary) 90%, transparent); }
.hover\:bg-gray-300:hover { background-color: rgb(209 213 219); }
.hover\:border-primary:hover { border-color: var(--color-primary); }

.hover-primary-80 {
    transition: color 0.2s ease;
}
.hover-primary-80:hover {
    color: color-mix(in srgb, var(--color-primary) 80%, transparent) !important;
}

.hover-bg-primary-80 {
    transition: background-color 0.2s ease;
}
.hover-bg-primary-80:hover {
    background-color: color-mix(in srgb, var(--color-primary) 80%, transparent) !important;
}

.hover-bg-primary-10 {
    transition: background-color 0.2s ease;
}
.hover-bg-primary-10:hover {
    background-color: color-mix(in srgb, var(--color-primary) 10%, transparent) !important;
}

// Disabled states
.disabled\:bg-gray-300:disabled { background-color: rgb(209 213 219); }
.disabled\:cursor-not-allowed:disabled { cursor: not-allowed; }

// Transitions (원본과 동일)
.transition-colors { 
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke; 
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); 
    transition-duration: 150ms; 
}
.duration-200 { transition-duration: 200ms; }

// Cursor
.cursor-pointer { cursor: pointer; }

// Position
.relative { position: relative; }

// Special Tailwind utility classes
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// Peer state handling for checkboxes
.peer:checked + .peer-checked\:bg-primary { background-color: var(--color-primary) !important; }
.peer:checked + .peer-checked\:text-white { color: white !important; }
.peer:checked ~ .peer-checked\:bg-primary { background-color: var(--color-primary) !important; }
.peer:checked ~ .peer-checked\:text-white { color: white !important; }

.transform { transform: translateX(0) translateY(0) rotate(0) skewX(0) skewY(0) scaleX(1) scaleY(1); }
.rotate-90 { transform: rotate(90deg); }

.gap-x-2 { column-gap: 0.5rem; }
.gap-1\.5 { gap: 0.375rem; }

.justify-between { justify-content: space-between; }

.pointer-events-none { pointer-events: none; }

.disabled\:border-black\/10:disabled { border-color: color-mix(in srgb, var(--color-black) 10%, transparent); }
.disabled\:bg-black\/3:disabled { background-color: color-mix(in srgb, var(--color-black) 3%, transparent); }
.disabled\:text-black\/60:disabled { color: color-mix(in srgb, var(--color-black) 60%, transparent); }

// Pseudo elements for required indicator (원본 primary 컬러)
.after\:content-\[\'\\2a\'\]::after { content: '*'; }
.after\:text-primary::after { color: var(--color-primary); }
.after\:ml-1::after { margin-left: 0.25rem; }

// Typography
.underline { text-decoration-line: underline; }

// ✅ 원본 앱과 완전히 동일한 SignUp Container
.signupContainer {
    // 원본에서는 GSAP로 opacity 애니메이션을 적용
    // 외부 스킨에서는 기본적으로 보이도록 설정
    opacity: 1;
}

// ✅ 원본 앱과 동일한 input 스타일링
input[type="email"],
input[type="text"], 
input[type="password"],
input[type="tel"] {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e1e5e9;
    border-radius: 8px;
    font-size: 16px;
    transition: all 0.3s ease;
    background: white;
    outline: none;
    font-family: inherit;
}

input[type="email"]:focus,
input[type="text"]:focus,
input[type="password"]:focus,
input[type="tel"]:focus {
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-primary) 10%, transparent);
}

// ✅ 원본 앱과 동일한 체크박스 스타일 (커스텀 방식)
.checkbox-container {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    border: 1px solid color-mix(in srgb, var(--color-black) 20%, transparent);
    color: color-mix(in srgb, var(--color-black) 20%, transparent);
    transition: all 0.3s ease;
    cursor: pointer;
}

.checkbox-container:hover {
    border-color: var(--color-primary);
}

.checkbox-container.checked {
    background-color: var(--color-primary) !important;
    border-color: var(--color-primary) !important;
    color: white !important;
}

// Peer state handling for checkboxes
.peer:checked + .peer-checked\:bg-primary { background-color: var(--color-primary) !important; }
.peer:checked + .peer-checked\:text-white { color: white !important; }
.peer:checked ~ .peer-checked\:bg-primary { background-color: var(--color-primary) !important; }
.peer:checked ~ .peer-checked\:text-white { color: white !important; }

// ✅ 원본 앱과 동일한 버튼 스타일
button {
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: inherit;
}

button:disabled {
    cursor: not-allowed;
    opacity: 0.6;
}

// ✅ 원본 앱과 동일한 라벨 스타일
label {
    display: block;
    font-weight: 500;
    margin-bottom: 8px;
    color: var(--color-black);
}

// Validation message styles (원본 컬러 사용)
.validation-message {
    font-size: 14px;
    margin-top: 6px;
}

// ✅ bt-5 클래스 (원본에서 사용하는 클래스)
.bt-5 {
    margin-top: 1.25rem; /* mt-5와 동일 */
}

// Responsive adjustments (원본과 동일)
@media (max-width: 480px) {
    .globalWrapper {
        padding-left: 1rem;
        padding-right: 1rem;
    }
    
    input[type="email"],
    input[type="text"], 
    input[type="password"],
    input[type="tel"] {
        font-size: 16px; // Prevent zoom on iOS
    }
}