{"version":3,"file":"signup-skin.umd.js","mappings":"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","sources":["webpack://SignUpSkin/webpack/universalModuleDefinition","webpack://SignUpSkin/./src/SignUpSkin.tsx","webpack://SignUpSkin/external umd \"React\"","webpack://SignUpSkin/webpack/bootstrap","webpack://SignUpSkin/webpack/runtime/compat get default export","webpack://SignUpSkin/webpack/runtime/define property getters","webpack://SignUpSkin/webpack/runtime/harmony module decorator","webpack://SignUpSkin/webpack/runtime/hasOwnProperty shorthand","webpack://SignUpSkin/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SignUpSkin\"] = factory(require(\"React\"));\n\telse\n\t\troot[\"SignUpSkin\"] = factory(root[\"React\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__883__) => {\nreturn ","import React from 'react';\nimport { ComponentSkinProps } from './types';\nimport './signup-skin.scss';\n\n// ✅ 원본 앱의 실제 컴포넌트들을 그대로 복사\nconst LabelInput = ({ label, validateContent, htmlFor, children, required = true }) => {\n    return (\n        <div className=\"flex flex-col\">\n            <label\n                htmlFor={htmlFor}\n                className={`mb-2 text-sm ${required ? \"after:content-['*'] after:text-primary after:ml-1\" : ''}`}\n            >\n                {label}\n            </label>\n            {children}\n            {validateContent && <div className=\"mt-2\">{validateContent}</div>}\n        </div>\n    );\n};\n\nconst TextInput = ({ id, type = 'text', placeholder, value, onChange, name, required, tailwind, readOnly, onBlur, disabled }) => {\n    return (\n        <input\n            id={id}\n            type={type}\n            aria-labelledby={name || type}\n            placeholder={placeholder}\n            name={name || type}\n            value={value}\n            onChange={onChange}\n            onBlur={onBlur}\n            required={required}\n            className={`w-full px-4.5 py-3.5 border border-black/20 text-sm disabled:border-black/10 disabled:bg-black/3 disabled:text-black/60 ${tailwind || ''}`}\n            readOnly={readOnly}\n            disabled={disabled}\n        />\n    );\n};\n\nconst WarningIcon = ({ tailwind }) => {\n    return (\n        <svg\n            width=\"20px\"\n            height=\"20px\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={`hover-primary ${tailwind || ''}`}\n        >\n            <path\n                d=\"m17.318 13.44-4.8-8.64C11.873 3.638 10.98 3 9.998 3c-.983 0-1.875.638-2.52 1.8l-4.8 8.64c-.608 1.103-.675 2.16-.188 2.993.488.832 1.448 1.29 2.708 1.29h9.6c1.26 0 2.22-.458 2.707-1.29.488-.833.42-1.898-.187-2.993ZM9.435 8.25c0-.308.255-.563.563-.563.307 0 .562.255.562.563V12a.567.567 0 0 1-.562.563.567.567 0 0 1-.563-.563V8.25Zm1.095 6.533-.112.09a.568.568 0 0 1-.135.067.452.452 0 0 1-.143.045.919.919 0 0 1-.142.015c-.045 0-.098-.008-.15-.015a.477.477 0 0 1-.135-.045.568.568 0 0 1-.135-.067l-.113-.09a.789.789 0 0 1-.217-.533c0-.195.082-.39.217-.533l.113-.09a.568.568 0 0 1 .135-.067.477.477 0 0 1 .135-.045.642.642 0 0 1 .292 0 .452.452 0 0 1 .143.045c.045.015.09.037.135.067l.112.09a.789.789 0 0 1 .218.533c0 .195-.083.39-.218.533Z\"\n                fill=\"currentColor\"\n            ></path>\n        </svg>\n    );\n};\n\nconst ValidateIcon = ({ tailwind }) => {\n    return (\n        <svg\n            width=\"20px\"\n            height=\"20px\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={`hover-primary ${tailwind || ''}`}\n        >\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm3.02-8.94a.75.75 0 1 0-1.08-1.04l-2.797 2.9L8.06 9.797a.75.75 0 1 0-1.08 1.041l2.162 2.243 3.876-4.02Z\"\n                fill=\"currentColor\"\n            ></path>\n        </svg>\n    );\n};\n\nconst WarningLabel = ({ message }) => {\n    return (\n        <div className=\"flex items-center gap-1.5 text-error\">\n            <WarningIcon />\n            <p className=\"text-sm\">{message}</p>\n        </div>\n    );\n};\n\nconst ValidateLabel = ({ isValid, message }) => {\n    return (\n        <div className={`flex items-center gap-1.5 ${isValid ? 'text-success' : 'text-black/40'}`}>\n            <ValidateIcon />\n            <p className=\"text-sm\">{message}</p>\n        </div>\n    );\n};\n\nconst CheckIcon = ({ tailwind }) => {\n    return (\n        <svg\n            width=\"20px\"\n            height=\"20px\"\n            viewBox=\"0 0 20 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={`hover-primary ${tailwind || ''}`}\n        >\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M17.527 4.467a.75.75 0 0 1 .006 1.06l-9.426 9.54-5.64-5.7A.75.75 0 0 1 3.533 8.31l4.573 4.622 8.36-8.46a.75.75 0 0 1 1.061-.006Z\"\n                fill=\"currentColor\"\n            ></path>\n        </svg>\n    );\n};\n\nconst ArrowIcon = ({ tailwind = '', rotate }) => {\n    return (\n        <svg\n            width=\"20px\"\n            height=\"20px\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={`hover-primary ${tailwind}`}\n            style={{ transform: rotate ? `rotate(${rotate}deg)` : 'none' }}\n        >\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M9.028 6.414a1 1 0 0 1 1.415 0l6.292 6.293a.75.75 0 0 1-1.06 1.06l-5.94-5.939-5.939 5.94a.75.75 0 1 1-1.06-1.061l6.292-6.293Z\"\n                fill=\"currentColor\"\n            ></path>\n        </svg>\n    );\n};\n\nconst CheckLabelBox = ({ id, label, description, required, modalContents, checked = false, onChange }) => {\n    const handleCheckboxClick = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (onChange) {\n            onChange(!checked);\n        }\n    };\n\n    const handleOpenModal = () => {\n        alert('약관 내용을 표시해야 합니다');\n    };\n\n    return (\n        <div className=\"flex items-center justify-between w-full gap-x-2\">\n            <div className=\"flex items-center cursor-pointer\" onClick={handleCheckboxClick}>\n                <input\n                    id={id}\n                    type=\"checkbox\"\n                    className=\"sr-only\"\n                    required={required}\n                    checked={checked}\n                    readOnly\n                />\n                <span className={`checkbox-container ${checked ? 'checked' : ''}`}>\n                    <CheckIcon tailwind=\"w-[18px] h-[18px]\" />\n                </span>\n                {label && <span className=\"text-sm ml-2\">{label}</span>}\n                {description && <span className=\"text-sm text-black/40 ml-1\">{description}</span>}\n            </div>\n            {modalContents && (\n                <button\n                    type=\"button\"\n                    className=\"p-1 border-0 bg-transparent\"\n                    onClick={handleOpenModal}\n                >\n                    <ArrowIcon\n                        tailwind=\"text-black w-4 h-4\"\n                        rotate=\"90\"\n                    />\n                </button>\n            )}\n        </div>\n    );\n};\n\nconst ColorButton = ({ children, colorType, ariaLabel, type, onClick, tailwind = '', to, disabled = false }) => {\n    const colors = {\n        primary: 'bg-primary text-white border-primary hover-bg-primary-80',\n        white: 'bg-white text-primary border-primary hover-bg-primary-10',\n        grayLine: 'bg-white text-black/80 border-black/20 hover-bg-primary-10',\n    };\n\n    const disabledStyles = disabled ? 'opacity-50 cursor-not-allowed pointer-events-none' : '';\n\n    return (\n        <button\n            type={type}\n            aria-label={ariaLabel}\n            disabled={disabled}\n            className={`flex items-center justify-center border hover:bg-primary/90 transition-colors ${colors[colorType]} ${disabledStyles} ${tailwind}`}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\n// ✅ API 문서 패턴에 따른 외부 스킨 컴포넌트\nconst SignUpSkin: React.FC<ComponentSkinProps> = ({ data, actions, options, utils }) => {\n    const { t, navigate } = utils;\n    \n    // ✅ Logic 레이어에서 제공하는 데이터만 사용 (API 패턴)\n    const { \n        formData = {},\n        loading = false,\n        signUpSuccess = false,\n        signUpError = null,\n        validationErrors = {},\n        theme = {},\n        basicFields = {},\n        varFields = {}\n    } = data;\n    \n    // ✅ 속성 패널에서 설정 가능한 모든 옵션 (문서 가이드 기준)\n    const {\n        // 기본 설정\n        title = '회원가입',\n        referralCode: defaultReferralCode,\n        \n        // 스타일 설정\n        backgroundColor = '#ffffff',\n        borderRadius = '10px',\n        boxShadow = '0 2px 8px rgba(0, 0, 0, 0.1)',\n        maxWidth = '1200px',\n        margin = '0 auto'\n    } = options;\n    \n    // ✅ 클라이언트 사이드 비밀번호 확인 (API 전송 안함)\n    const [localPasswordConfirm, setLocalPasswordConfirm] = React.useState('');\n    \n    // ✅ Logic에서 제공하는 액션들 사용 (API 문서 명시 액션들)\n    const { \n        handleSubmit, \n        handleChange, \n        handleBlur\n    } = actions;\n\n    // ✅ 폼 데이터에서 개별 값들 추출 (Logic 레이어 데이터만 사용)\n    const email = formData.email || '';\n    const name = formData.name || '';\n    const password = formData.password || '';\n    const phoneNumber = formData.phone || '';\n    const referrer = formData.referral_code || defaultReferralCode || '';\n    \n    // ✅ 약관 동의 상태 (Logic 레이어 데이터만 사용)\n    const agreements = formData.agreements || {\n        all: false,\n        age: false,\n        terms: false,\n        privacy: false,\n        marketing: false\n    };\n\n    // ✅ 유효성 검사 상태 (Logic 레이어 데이터 기반)\n    const isPasswordMatch = password !== '' && password === localPasswordConfirm;\n    const isRequiredAgreementsValid = agreements.age && agreements.terms && agreements.privacy;\n\n    // ✅ 동적 버튼 색상 설정\n    const buttonColor = theme?.primaryColor || '#89a1be';           // 기본 버튼 색상\n    const buttonTextColor = '#ffffff';                              // 텍스트 색상 (흰색)\n    const buttonHoverColor = theme?.primaryHoverColor || theme?.primaryColor || '#7a91ac';  // 호버 색상\n\n    // ✅ 약관 동의 처리 - handleChange를 통해 Logic 레이어로 전달\n    const handleAgreementChange = (type) => {\n        const newAgreements = { ...agreements };\n        \n        if (type === 'all') {\n            const newValue = !agreements.all;\n            newAgreements.all = newValue;\n            newAgreements.age = newValue;\n            newAgreements.terms = newValue;\n            newAgreements.privacy = newValue;\n            newAgreements.marketing = newValue;\n        } else {\n            newAgreements[type] = !agreements[type];\n            newAgreements.all = newAgreements.age && newAgreements.terms && newAgreements.privacy && newAgreements.marketing;\n        }\n        \n        // ✅ Logic 레이어의 handleChange 사용\n        const event = {\n            target: { id: 'agreements', value: newAgreements }\n        };\n        handleChange(event);\n    };\n\n    // ✅ 디버깅이 포함된 제출 핸들러\n    const handleSubmitWithValidation = (e) => {\n        e.preventDefault();\n        console.log('🔥 handleSubmitWithValidation 호출 시작');\n        \n        // 현재 상태 로깅\n        console.log('📋 현재 formData:', formData);\n        console.log('📋 validationErrors:', validationErrors);\n        console.log('📋 loading 상태:', loading);\n        console.log('📋 agreements 상태:', agreements);\n        \n        // 필수 필드 체크\n        console.log('📋 필수 필드 확인:', {\n            email: formData.email,\n            name: formData.name,\n            password: formData.password,\n            phone: formData.phone,\n            user_id: formData.user_id,\n        });\n        \n        // 클라이언트 사이드 비밀번호 확인 검증\n        if (password !== localPasswordConfirm) {\n            console.log('❌ 비밀번호 불일치');\n            alert('비밀번호가 일치하지 않습니다.');\n            return;\n        }\n        console.log('✅ 비밀번호 일치 확인');\n        \n        // Logic 레이어 유효성 검사 (있다면)\n        if (actions?.validateForm) {\n            console.log('🔍 Logic 유효성 검사 시작');\n            const isValid = actions.validateForm();\n            console.log('✅ Logic 유효성 검사 결과:', isValid);\n            if (!isValid) {\n                console.log('❌ Logic 유효성 검사 실패로 API 호출 안함');\n                return;\n            }\n        } else {\n            console.log('⚠️ validateForm 액션이 없습니다');\n        }\n        \n        // Logic 레이어의 실제 handleSubmit 호출\n        console.log('🚀 Logic handleSubmit 호출 시작');\n        console.log('handleSubmit type:', typeof handleSubmit);\n        console.log('handleSubmit function:', handleSubmit);\n        \n        handleSubmit(e);\n        console.log('✅ Logic handleSubmit 호출 완료');\n    };\n\n    // ✅ 성공 시 UI (스타일 옵션 적용)\n    if (signUpSuccess) {\n        return (\n            <div className=\"signupContainer opacity-100\" style={{\n                minHeight: '100vh',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                padding: '20px'\n            }}>\n                <section className=\"globalWrapper w-full py-8 md:py-13\" style={{\n                    backgroundColor,\n                    borderRadius,\n                    boxShadow,\n                    maxWidth: '600px',\n                    margin,\n                    padding: '40px'\n                }}>\n                    <div className=\"text-center\">\n                        <h2 className=\"font-serif text-3xl mb-5\" style={{ color: theme?.primaryColor || '#333' }}>\n                            {t('회원가입 완료!')}\n                        </h2>\n                        <p style={{ fontSize: '16px', color: '#666', marginBottom: '30px' }}>\n                            {t('환영합니다! 잠시 후 페이지가 이동됩니다.')}\n                        </p>\n                        <button \n                            onClick={() => navigate('/')}\n                            style={{\n                                padding: '12px 30px',\n                                fontSize: '16px',\n                                backgroundColor: theme?.primaryColor || '#007bff',\n                                color: 'white',\n                                border: 'none',\n                                borderRadius: '6px',\n                                cursor: 'pointer'\n                            }}\n                        >\n                            {t('홈으로 이동')}\n                        </button>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n\n    // ✅ 원본 앱의 정확한 구조를 그대로 사용 (스타일 옵션 적용)\n    return (\n        <div className=\"signupContainer opacity-100\" style={{\n            minHeight: '100vh',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: '20px'\n        }}>\n            <section className=\"globalWrapper w-full py-8 md:py-13\" style={{\n                backgroundColor,\n                borderRadius,\n                boxShadow,\n                maxWidth,\n                margin,\n                padding: '40px'\n            }}>\n                <div className=\"font-serif text-3xl mb-5 text-center\">\n                    <h2 style={{ color: theme?.primaryColor || '#333' }}>{title}</h2>\n                </div>\n                \n                {/* 에러 메시지 표시 */}\n                {signUpError && (\n                    <div style={{\n                        padding: '15px',\n                        backgroundColor: '#f8d7da',\n                        color: '#721c24',\n                        borderRadius: '4px',\n                        marginBottom: '20px'\n                    }}>\n                        {typeof signUpError === 'object' ? signUpError.msg || JSON.stringify(signUpError) : signUpError}\n                    </div>\n                )}\n                <form\n                    className=\"flex flex-col items-center pt-5\"\n                    onSubmit={handleSubmitWithValidation}\n                >\n                    <div className=\"w-full space-y-6\">\n                        {/* 기본 필드들 - basicFields 설정에 따라 조건부 표시 */}\n                        {basicFields.userId !== false && (\n                            <LabelInput\n                                label={t('아이디')}\n                                htmlFor=\"user_id\"\n                                validateContent={validationErrors.user_id && <WarningLabel message={validationErrors.user_id} />}\n                            >\n                                <TextInput\n                                    type=\"text\"\n                                    id=\"user_id\"\n                                    placeholder={t('아이디를 입력해주세요 (이메일 또는 닉네임)')}\n                                    value={formData.user_id || email}\n                                    onChange={handleChange}\n                                    onBlur={() => handleBlur && handleBlur('user_id')}\n                                />\n                            </LabelInput>\n                        )}\n                        \n                        {basicFields.name !== false && (\n                            <LabelInput\n                                label={t('이름')}\n                                htmlFor=\"name\"\n                                validateContent={validationErrors.name && <WarningLabel message={validationErrors.name} />}\n                            >\n                                <TextInput\n                                    type=\"text\"\n                                    id=\"name\"\n                                    placeholder={t('이름을 입력해주세요')}\n                                    value={name}\n                                    onChange={handleChange}\n                                    onBlur={() => handleBlur && handleBlur('name')}\n                                />\n                            </LabelInput>\n                        )}\n                        \n                        {basicFields.password !== false && (\n                            <>\n                                <LabelInput\n                                    label={t('비밀번호')}\n                                    htmlFor=\"password\"\n                                    validateContent={validationErrors.password && <WarningLabel message={validationErrors.password} />}\n                                >\n                                    <TextInput\n                                        type=\"password\"\n                                        id=\"password\"\n                                        placeholder={t('비밀번호를 입력해주세요')}\n                                        value={password}\n                                        onChange={handleChange}\n                                        onBlur={() => handleBlur && handleBlur('password')}\n                                    />\n                                </LabelInput>\n                                <LabelInput\n                                    label={t('비밀번호 확인')}\n                                    htmlFor=\"password_confirm_local\"\n                                    validateContent={\n                                        <ValidateLabel\n                                            isValid={isPasswordMatch}\n                                            message={t('비밀번호 일치')}\n                                        />\n                                    }\n                                >\n                                    <TextInput\n                                        type=\"password\"\n                                        id=\"password_confirm_local\"\n                                        placeholder={t('비밀번호를 재입력해주세요')}\n                                        value={localPasswordConfirm}\n                                        onChange={(e) => setLocalPasswordConfirm(e.target.value)}\n                                    />\n                                </LabelInput>\n                            </>\n                        )}\n                        \n                        {basicFields.phone !== false && (\n                            <LabelInput\n                                label={t('휴대폰 번호')}\n                                htmlFor=\"phone\"\n                                validateContent={validationErrors.phone && <WarningLabel message={validationErrors.phone} />}\n                            >\n                                <TextInput\n                                    type=\"tel\"\n                                    id=\"phone\"\n                                    placeholder={t('휴대폰 번호를 입력해주세요')}\n                                    value={phoneNumber}\n                                    onChange={handleChange}\n                                    onBlur={() => handleBlur && handleBlur('phone')}\n                                />\n                            </LabelInput>\n                        )}\n                        \n                        {basicFields.email !== false && (\n                            <LabelInput\n                                label={t('이메일')}\n                                htmlFor=\"email\"\n                                required={false}\n                                validateContent={validationErrors.email && <WarningLabel message={validationErrors.email} />}\n                            >\n                                <TextInput\n                                    type=\"email\"\n                                    id=\"email\"\n                                    placeholder={t('이메일을 입력해주세요')}\n                                    value={email}\n                                    onChange={handleChange}\n                                    onBlur={() => handleBlur && handleBlur('email')}\n                                />\n                            </LabelInput>\n                        )}\n                        \n                        {basicFields.birthday !== false && (\n                            <LabelInput\n                                label={t('생년월일')}\n                                htmlFor=\"birthday\"\n                                required={false}\n                                validateContent={validationErrors.birthday && <WarningLabel message={validationErrors.birthday} />}\n                            >\n                                <TextInput\n                                    type=\"date\"\n                                    id=\"birthday\"\n                                    value={formData.birthday || ''}\n                                    onChange={handleChange}\n                                    onBlur={() => handleBlur && handleBlur('birthday')}\n                                />\n                            </LabelInput>\n                        )}\n                        \n                        {basicFields.address !== false && (\n                            <LabelInput\n                                label={t('주소')}\n                                htmlFor=\"address\"\n                                required={false}\n                                validateContent={validationErrors.address && <WarningLabel message={validationErrors.address} />}\n                            >\n                                <TextInput\n                                    type=\"text\"\n                                    id=\"address\"\n                                    placeholder={t('주소를 입력해주세요')}\n                                    value={formData.address || ''}\n                                    onChange={handleChange}\n                                    onBlur={() => handleBlur && handleBlur('address')}\n                                />\n                            </LabelInput>\n                        )}\n                        \n                        {basicFields.referralCode !== false && (\n                            <LabelInput\n                                label={t('추천인')}\n                                htmlFor=\"referral_code\"\n                                required={false}\n                            >\n                                <TextInput\n                                    type=\"text\"\n                                    id=\"referral_code\"\n                                    placeholder={t('추천인의 이메일이나 닉네임을 입력해주세요')}\n                                    value={referrer}\n                                    onChange={handleChange}\n                                    onBlur={() => handleBlur && handleBlur('referral_code')}\n                                    readOnly={!!defaultReferralCode}\n                                />\n                            </LabelInput>\n                        )}\n                        \n                        {/* 커스텀 필드들 - varFields 설정에 따라 동적 렌더링 */}\n                        {Object.entries(varFields).map(([fieldId, config]) => {\n                            if (!config.show) return null;\n                            \n                            return (\n                                <LabelInput\n                                    key={fieldId}\n                                    label={config.label}\n                                    htmlFor={fieldId}\n                                    required={config.required}\n                                    validateContent={validationErrors[fieldId] && <WarningLabel message={validationErrors[fieldId]} />}\n                                >\n                                    {config.type === 'select' ? (\n                                        <select\n                                            id={fieldId}\n                                            name={fieldId}\n                                            value={formData[fieldId] || ''}\n                                            onChange={handleChange}\n                                            onBlur={() => handleBlur && handleBlur(fieldId)}\n                                            className=\"w-full px-4.5 py-3.5 border border-black/20 text-sm\"\n                                        >\n                                            <option value=\"\">{t('선택하세요')}</option>\n                                            {config.options?.map((opt, idx) => (\n                                                <option key={idx} value={opt}>{opt}</option>\n                                            ))}\n                                        </select>\n                                    ) : config.type === 'radio' ? (\n                                        <div className=\"flex gap-4\">\n                                            {config.options?.map((opt, idx) => (\n                                                <label key={idx} className=\"flex items-center gap-2\">\n                                                    <input\n                                                        type=\"radio\"\n                                                        name={fieldId}\n                                                        value={opt}\n                                                        checked={formData[fieldId] === opt}\n                                                        onChange={handleChange}\n                                                    />\n                                                    {opt}\n                                                </label>\n                                            ))}\n                                        </div>\n                                    ) : config.type === 'document' ? (\n                                        <div>\n                                            <div style={{\n                                                height: '200px',\n                                                overflowY: 'auto',\n                                                border: '1px solid #ddd',\n                                                padding: '10px',\n                                                marginBottom: '10px',\n                                                backgroundColor: '#f9f9f9',\n                                                borderRadius: '4px'\n                                            }}>\n                                                {config.content || t('동의 내용이 여기에 표시됩니다.')}\n                                            </div>\n                                            <CheckLabelBox\n                                                id={fieldId}\n                                                label={config.required ? t('위 내용에 동의합니다 (필수)') : t('위 내용에 동의합니다 (선택)')}\n                                                required={config.required}\n                                                checked={formData[fieldId] === '1'}\n                                                onChange={(checked) => {\n                                                    const event = {\n                                                        target: { id: fieldId, value: checked ? '1' : '0' }\n                                                    };\n                                                    handleChange(event);\n                                                }}\n                                            />\n                                        </div>\n                                    ) : (\n                                        <TextInput\n                                            type=\"text\"\n                                            id={fieldId}\n                                            placeholder={`${config.label}${config.required ? ' (필수)' : ''}`}\n                                            value={formData[fieldId] || ''}\n                                            onChange={handleChange}\n                                            onBlur={() => handleBlur && handleBlur(fieldId)}\n                                        />\n                                    )}\n                                </LabelInput>\n                            );\n                        })}\n                    </div>\n                    <div className=\"w-full space-y-5 my-10\">\n                        <CheckLabelBox\n                            id=\"termsAllCheck\"\n                            label=\"모든 약관에 동의합니다.\"\n                            checked={agreements.all}\n                            onChange={() => handleAgreementChange('all')}\n                        />\n                        <div className=\"w-full h-[1px] bg-black/10\"></div>\n                        <CheckLabelBox\n                            id=\"ageCheck\"\n                            label=\"만 14세 이상입니다.\"\n                            description=\"(필수)\"\n                            required\n                            checked={agreements.age}\n                            onChange={() => handleAgreementChange('age')}\n                        />\n                        <CheckLabelBox\n                            id=\"termsCheck\"\n                            label=\"이용약관 동의\"\n                            description=\"(필수)\"\n                            required\n                            checked={agreements.terms}\n                            onChange={() => handleAgreementChange('terms')}\n                            modalContents={<div className=\"pb-10\"><p>이용약관 내용...</p></div>}\n                        />\n                        <CheckLabelBox\n                            id=\"privacyCheck\"\n                            label=\"개인 정보 수집 및 이용 동의\"\n                            description=\"(필수)\"\n                            required\n                            checked={agreements.privacy}\n                            onChange={() => handleAgreementChange('privacy')}\n                            modalContents={<div className=\"pb-10\"><p>개인정보 처리방침 내용...</p></div>}\n                        />\n                        <CheckLabelBox\n                            id=\"marketingCheck\"\n                            label=\"이메일 및 SNS 마케팅 정보 수신 동의\"\n                            description=\"(선택)\"\n                            checked={agreements.marketing}\n                            onChange={() => handleAgreementChange('marketing')}\n                        />\n                        {validationErrors.agreements && (\n                            <WarningLabel message={validationErrors.agreements} />\n                        )}\n                    </div>\n                    <div className=\"w-full bt-5\">\n                        <button\n                            type=\"submit\"\n                            disabled={!isRequiredAgreementsValid || loading}\n                            className={`w-full px-4.5 py-3.5 border-0 rounded-md font-medium transition-colors ${\n                                !isRequiredAgreementsValid || loading \n                                    ? 'opacity-50 cursor-not-allowed pointer-events-none' \n                                    : 'hover:opacity-90'\n                            }`}\n                            style={{\n                                backgroundColor: buttonColor,\n                                color: buttonTextColor,\n                            }}\n                            onMouseEnter={(e) => {\n                                if (!loading && isRequiredAgreementsValid) {\n                                    e.target.style.backgroundColor = buttonHoverColor;\n                                }\n                            }}\n                            onMouseLeave={(e) => {\n                                if (!loading && isRequiredAgreementsValid) {\n                                    e.target.style.backgroundColor = buttonColor;\n                                }\n                            }}\n                        >\n                            {loading ? '처리 중...' : '회원가입'}\n                        </button>\n                    </div>\n                </form>\n                <div className=\"flex items-center justify-center gap-2 w-full text-sm mt-5\">\n                    <span>이미 아이디가 있으신가요?</span>\n                    <button\n                        type=\"button\"\n                        onClick={() => navigate('/login')}\n                        className=\"text-primary hover-primary-80 font-bold cursor-pointer border-0 bg-transparent p-0 text-sm leading-none\"\n                    >\n                        로그인\n                    </button>\n                </div>\n            </section>\n        </div>\n    );\n};\n\n// ✅ UMD 내보내기 방법\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = SignUpSkin;\n} else {\n    window.SignUpSkin = SignUpSkin;\n}\n\nexport default SignUpSkin;","module.exports = __WEBPACK_EXTERNAL_MODULE__883__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import SignUpSkin from './SignUpSkin';\n\n// UMD 모드에서 default export를 전역 변수로 노출\nexport default SignUpSkin;\n\n// 타입들도 내보냄 (필요시)\nexport * from './types';\n\n// 전역 변수로 노출 (UMD 환경에서)\nif (typeof window !== 'undefined') {\n  (window as any).SignUpSkin = SignUpSkin;\n}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__883__","LabelInput","_ref","label","validateContent","htmlFor","children","_ref$required","required","React","className","concat","TextInput","_ref2","id","_ref2$type","type","placeholder","value","onChange","name","tailwind","readOnly","onBlur","disabled","WarningIcon","_ref3","width","height","viewBox","fill","xmlns","d","ValidateIcon","_ref4","fillRule","clipRule","WarningLabel","_ref5","message","ValidateLabel","_ref6","isValid","CheckIcon","_ref7","ArrowIcon","_ref8","_ref8$tailwind","rotate","style","transform","CheckLabelBox","_ref9","description","modalContents","_ref9$checked","checked","onClick","e","preventDefault","stopPropagation","alert","SignUpSkin","_ref1","data","actions","options","utils","t","navigate","_data$formData","formData","_data$loading","loading","_data$signUpSuccess","signUpSuccess","_data$signUpError","signUpError","_data$validationError","validationErrors","_data$theme","theme","_data$basicFields","basicFields","_data$varFields","varFields","_options$title","title","defaultReferralCode","referralCode","_options$backgroundCo","backgroundColor","_options$borderRadius","borderRadius","_options$boxShadow","boxShadow","_options$maxWidth","maxWidth","_options$margin","margin","_React$useState2","_slicedToArray","localPasswordConfirm","setLocalPasswordConfirm","handleSubmit","handleChange","handleBlur","email","password","phoneNumber","phone","referrer","referral_code","agreements","all","age","terms","privacy","marketing","isPasswordMatch","isRequiredAgreementsValid","buttonColor","primaryColor","buttonHoverColor","primaryHoverColor","handleAgreementChange","newAgreements","_objectSpread","newValue","target","minHeight","display","alignItems","justifyContent","padding","color","fontSize","marginBottom","border","cursor","_typeof","msg","JSON","stringify","onSubmit","console","log","user_id","validateForm","userId","birthday","address","Object","entries","map","_ref10","_config$options","_config$options2","_ref11","fieldId","config","show","key","opt","idx","overflowY","content","onMouseEnter","onMouseLeave","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","hmd","create","set","Error","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}