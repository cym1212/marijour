{"version":3,"file":"product-list-skin.umd.js","mappings":"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","sources":["webpack://ProductListSkin/webpack/universalModuleDefinition","webpack://ProductListSkin/external umd {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack://ProductListSkin/./src/ProductListSkin.tsx","webpack://ProductListSkin/webpack/bootstrap","webpack://ProductListSkin/webpack/runtime/compat get default export","webpack://ProductListSkin/webpack/runtime/define property getters","webpack://ProductListSkin/webpack/runtime/harmony module decorator","webpack://ProductListSkin/webpack/runtime/hasOwnProperty shorthand","webpack://ProductListSkin/webpack/runtime/make namespace object","webpack://ProductListSkin/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ProductListSkin\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ProductListSkin\"] = factory(root[\"React\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__12__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","import React, { useEffect } from 'react';\nimport { ComponentSkinProps } from './types';\nimport './product-list-skin.scss';\n\n// ✅ 원본 앱 /app/routes/shop.$/index.tsx 디자인 정확히 복사 + 속성 패널 옵션 반영\nconst ProductListSkin: React.FC<ComponentSkinProps> = ({ data, actions, utils, options }) => {\n  const { t, formatCurrency } = utils;\n  \n  // 원본과 동일한 데이터 구조\n  const products = data.products || [];\n  const loading = data.loading || false;\n  const showStock = data.showStock || false;\n  const itemsPerRow = data.itemsPerRow || 4;\n  \n  const { handleAddToCart, handleSearch, handleSortChange, handlePageChange, handleLoadMore } = actions;\n\n  // ✅ 속성 패널에서 설정 가능한 모든 옵션 (문서 가이드 기준)\n  const {\n    // 레이아웃 설정\n    lg = 12,\n    className = 'padding-tb-40',\n    itemsPerPage = 20,\n    \n    // 필터링 설정 (서버에서 처리되지만 UI에서 참조)\n    categoryId,\n    include_product_ids,\n    exclude_product_ids,\n    include_category_ids,\n    exclude_category_ids,\n    excludeIndexes,\n    \n    // 표시 설정\n    showPrice = true,\n    showAddToCart = true,\n    showPagination = true,\n    enableInfiniteScroll = true,\n    \n    // 스타일 설정\n    backgroundColor = '#ffffff',\n    padding = '20px',\n    borderRadius = '8px',\n    priceColor = '#ff6b6b',\n    cartButtonColor = '#007bff',\n    stockTextColor = '#28a745',\n    \n    // 기존 호환성 옵션\n    buttonColor,\n    theme\n  } = options;\n\n  // 반응형 그리드 컬럼 계산\n  const getGridColumns = () => {\n    if (window.innerWidth < 768) return 2;  // 모바일: 2열\n    return itemsPerRow || 4;  // PC: 설정값 또는 4열\n  };\n\n  const [gridColumns, setGridColumns] = React.useState(getGridColumns());\n\n  React.useEffect(() => {\n    const handleResize = () => setGridColumns(getGridColumns());\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [itemsPerRow]);\n\n  // 모바일 감지\n  const [isMobile, setIsMobile] = React.useState(false);\n  \n  React.useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  // 모바일 무한 스크롤 관련 상태\n  const mobileProducts = data.mobileProducts || [];\n  const isLoadingMore = data.isLoadingMore || false;\n  const hasMore = data.hasMore || (data.currentPage < data.totalPages);\n  const displayProducts = isMobile && enableInfiniteScroll ? mobileProducts : products;\n\n  // 더보기 버튼 ref\n  const loadMoreButtonRef = React.useRef<HTMLButtonElement>(null);\n\n  // 자동 더보기 (Intersection Observer)\n  React.useEffect(() => {\n    if (!isMobile || !enableInfiniteScroll || !loadMoreButtonRef.current) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting && hasMore && !isLoadingMore) {\n            // 버튼이 화면에 보이면 0.5초 후 자동 로드\n            setTimeout(() => {\n              if (hasMore && !isLoadingMore && handleLoadMore) {\n                handleLoadMore();\n              }\n            }, 500);\n          }\n        });\n      },\n      { threshold: 0.5 }\n    );\n\n    observer.observe(loadMoreButtonRef.current);\n    return () => observer.disconnect();\n  }, [isMobile, enableInfiniteScroll, hasMore, isLoadingMore, handleLoadMore]);\n\n  // 테마 색상 CSS 변수 설정 (속성 패널 색상 우선 적용)\n  const finalButtonColor = cartButtonColor || buttonColor || theme?.colorset?.primaryColor || '#89a1be';\n  const finalPriceColor = priceColor || '#ff6b6b';\n  \n  const themeStyles = {\n    '--primary-color': finalButtonColor,\n    '--secondary-color': theme?.colorset?.secondaryColor || '#FAFAF8', \n    '--tertiary-color': theme?.colorset?.tertiaryColor || '#F5BF42',\n    '--price-color': finalPriceColor,\n    '--stock-color': stockTextColor,\n    backgroundColor,\n    borderRadius,\n    padding,\n  } as React.CSSProperties;\n\n  // 원본 앱의 GSAP 애니메이션 효과 제거 (opacity 문제 해결)\n  // 장바구니 추가 후 화면이 사라지는 문제를 방지하기 위해 애니메이션 제거\n\n  // 로딩 상태 처리\n  if (loading) {\n    return (\n      <div className={className} style={themeStyles}>\n        <div style={{ textAlign: 'center', padding: '50px', color: '#666' }}>\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">{t('로딩 중...')}</span>\n          </div>\n          <p style={{ marginTop: '10px' }}>{t('상품을 불러오는 중입니다...')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`shopContainer ${className}`} style={{...themeStyles}}>\n      {/* 원본 앱의 BreadcrumbTabsHeader 영역 - 스킨에서는 생략 */}\n      \n      {displayProducts.length > 0 ? (\n        <>\n          \n          {/* 상품 그리드 (동적 컬럼 수 적용) */}\n          <section className=\"productsContainer globalWrapper w-full pb-5 md:pb-10 mb-5 md:mb-10\">\n            <div \n              className=\"grid gap-x-4 md:gap-x-5 gap-y-10 md:gap-y-15\"\n              style={{\n                gridTemplateColumns: `repeat(${gridColumns}, 1fr)`\n              }}\n            >\n              {displayProducts.map((product) => (\n                <div \n                  key={product.id} \n                  className=\"productItem group/productItem cursor-pointer\"\n                >\n                  {/* Link는 스킨에서 onClick으로 대체 */}\n                  <div \n                    className=\"block\"\n                    onClick={(e) => {\n                      // 장바구니 버튼 클릭 시에는 상품 상세 페이지로 이동하지 않음\n                      if ((e.target as HTMLElement).closest('button')) {\n                        return;\n                      }\n                      utils.navigate && utils.navigate(`/products/${product.id}`);\n                    }}\n                  >\n                    {/* 썸네일 (원본과 동일) */}\n                    <div className=\"relative overflow-hidden\">\n                      <div className=\"w-full h-full aspect-square\">\n                        <img\n                          src={product.image || product.thumbnail}\n                          alt={product.name}\n                          className=\"w-full h-full object-cover transition-transform duration-300 ease-out group-hover/productItem:scale-105\"\n                        />\n                      </div>\n                      {/* 장바구니 버튼 (showAddToCart 설정에 따라 표시) */}\n                      {showAddToCart && (\n                        <div className=\"absolute bottom-3 md:bottom-4 right-3 md:right-4\">\n                          <button\n                            className=\"p-2.5 rounded-full cursor-pointer transition-all duration-300 flex items-center justify-center hover:opacity-90\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              e.stopPropagation();\n                              if (handleAddToCart) {\n                                handleAddToCart(product);\n                              }\n                              return false;\n                            }}\n                            type=\"button\"\n                            style={{\n                              backgroundColor: finalButtonColor,\n                              border: `1px solid ${finalButtonColor}`\n                            }}\n                          >\n                          {/* CartIcon SVG (원본과 동일) */}\n                          <svg \n                            className=\"w-5 h-5 text-white transition-colors duration-300\" \n                            viewBox=\"0 0 24 24\" \n                            fill=\"none\" \n                            xmlns=\"http://www.w3.org/2000/svg\"\n                          >\n                            <path \n                              d=\"M3 3H5L5.4 5M7 13H17L21 5H5.4M7 13L5.4 5M7 13L4.70711 15.2929C4.07714 15.9229 4.52331 17 5.41421 17H17M17 13V17M17 17C15.8954 17 15 17.8954 15 19C15 20.1046 15.8954 21 17 21C18.1046 21 19 20.1046 19 19C19 17.8954 18.1046 17 17 17ZM9 19C9 20.1046 8.10457 21 7 21C5.89543 21 5 20.1046 5 19C5 17.8954 5.89543 17 7 17C8.10457 17 9 17.8954 9 19Z\" \n                              stroke=\"currentColor\" \n                              strokeWidth=\"1.5\" \n                              strokeLinecap=\"round\" \n                              strokeLinejoin=\"round\"\n                            />\n                          </svg>\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* 제품 정보 (속성 패널 설정 반영) */}\n                    <div className=\"mt-3 md:mt-4\">\n                      <h4 className=\"text-sm text-gray-900 line-clamp-2\">{product.name}</h4>\n                      <div className=\"mt-0.5 md:mt-1 space-y-0.5 md:space-y-1\">\n                        {/* 가격 표시 (showPrice 설정에 따라 표시) */}\n                        {showPrice && (\n                          <div className=\"flex items-center flex-wrap gap-1.5\">\n                            {product.discountPercent > 0 && (\n                              <span \n                                className=\"text-xs font-bold px-1 py-0.5 rounded-sm\"\n                                style={{\n                                  color: finalPriceColor,\n                                  backgroundColor: 'rgba(255, 107, 107, 0.1)'\n                                }}\n                              >\n                                {product.discountPercent}%\n                              </span>\n                            )}\n                            <p \n                              className=\"text-base font-bold m-0\"\n                              style={{ color: finalPriceColor }}\n                            >\n                              {formatCurrency ? formatCurrency(product.price) : `${product.price.toLocaleString()}원`}\n                            </p>\n                            {product.originalPrice && (\n                              <del className=\"text-sm font-bold text-black/40\">\n                                {formatCurrency ? formatCurrency(product.originalPrice) : `${product.originalPrice.toLocaleString()}원`}\n                              </del>\n                            )}\n                          </div>\n                        )}\n                        \n                        {/* 재고 표시 (showStock 설정에 따라 표시) */}\n                        {showStock && (\n                          <div \n                            className=\"text-xs\"\n                            style={{ \n                              color: product.isInStock !== false ? stockTextColor : '#dc3545' \n                            }}\n                          >\n                            {product.isInStock !== false ? \n                              `${t('재고')}: ${product.stockCount || 0}${t('개')}` : \n                              t('품절')\n                            }\n                          </div>\n                        )}\n                        \n                        {/* ReviewScore 컴포넌트 재현 */}\n                        {product.reviewCount > 0 && (\n                          <div className=\"flex items-center gap-1\">\n                            <svg \n                              className=\"w-3 h-3\"\n                              style={{ color: finalButtonColor }}\n                              viewBox=\"0 0 24 24\" \n                              fill=\"currentColor\"\n                            >\n                              <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n                            </svg>\n                            <p \n                              className=\"text-xs font-bold m-0\"\n                              style={{ color: finalButtonColor }}\n                            >\n                              {product.rating}\n                            </p>\n                            <p className=\"text-xs text-black/60 m-0\">({product.reviewCount})</p>\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* TextBadge 컴포넌트들 재현 */}\n                      {product.badges && (\n                        <div className=\"flex flex-wrap items-center justify-start gap-1.5 mt-2 mb-3\">\n                          {product.badges.map((badge, index) => (\n                            <span\n                              key={index}\n                              className=\"text-xs px-1 leading-tight\"\n                              style={{\n                                color: finalButtonColor,\n                                border: `1px solid ${finalButtonColor}`\n                              }}\n                            >\n                              {badge}\n                            </span>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </section>\n          \n          {/* 페이지네이션 (PC) 또는 더보기 버튼 (모바일) */}\n          {showPagination && (\n            <>\n              {/* PC 페이지네이션 - 원본 앱 디자인 */}\n              {!isMobile && data.totalPages > 1 && (\n                <section className=\"globalWrapper w-full pb-5 md:pb-10\">\n                  <div className=\"product-pagination\" style={{ marginTop: '40px' }}>\n                    <ul className=\"pagination\" style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                      width: '100%',\n                      padding: '0',\n                      listStyle: 'none',\n                      margin: '0'\n                    }}>\n                      {/* 이전 페이지 */}\n                      <li style={{ margin: '0 5px' }}>\n                        <button\n                          onClick={() => handlePageChange && handlePageChange(Math.max(1, data.currentPage - 1))}\n                          disabled={data.currentPage === 1}\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            width: '32px',\n                            height: '32px',\n                            borderRadius: '4px',\n                            backgroundColor: '#f5f5f5',\n                            color: '#333',\n                            border: 'none',\n                            textDecoration: 'none',\n                            transition: 'all 0.3s ease',\n                            cursor: data.currentPage === 1 ? 'not-allowed' : 'pointer',\n                            opacity: data.currentPage === 1 ? 0.5 : 1,\n                            fontSize: '12px'\n                          }}\n                          onMouseEnter={(e) => {\n                            if (data.currentPage !== 1) {\n                              e.target.style.backgroundColor = '#e0e0e0';\n                            }\n                          }}\n                          onMouseLeave={(e) => {\n                            if (data.currentPage !== 1) {\n                              e.target.style.backgroundColor = '#f5f5f5';\n                            }\n                          }}\n                        >\n                          ‹\n                        </button>\n                      </li>\n                      \n                      {/* 페이지 번호들 */}\n                      {(() => {\n                        const pageNumbers = [];\n                        const maxVisiblePages = 5;\n                        const currentPage = data.currentPage || 1;\n                        const totalPages = data.totalPages || 1;\n                        let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n                        let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n                        \n                        if (endPage - startPage < maxVisiblePages - 1) {\n                          startPage = Math.max(1, endPage - maxVisiblePages + 1);\n                        }\n                        \n                        for (let i = startPage; i <= endPage; i++) {\n                          const isActive = currentPage === i;\n                          pageNumbers.push(\n                            <li key={i} style={{ margin: '0 5px' }}>\n                              <button\n                                onClick={() => handlePageChange && handlePageChange(i)}\n                                style={{\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                  width: '32px',\n                                  height: '32px',\n                                  borderRadius: '4px',\n                                  backgroundColor: isActive ? '#6c4bd1' : '#f5f5f5',\n                                  color: isActive ? 'white' : '#333',\n                                  border: 'none',\n                                  textDecoration: 'none',\n                                  transition: 'all 0.3s ease',\n                                  cursor: 'pointer',\n                                  fontSize: '14px',\n                                  fontWeight: isActive ? 'bold' : 'normal'\n                                }}\n                                onMouseEnter={(e) => {\n                                  if (!isActive) {\n                                    e.target.style.backgroundColor = '#e0e0e0';\n                                  } else {\n                                    e.target.style.backgroundColor = '#5a3ec0';\n                                  }\n                                }}\n                                onMouseLeave={(e) => {\n                                  if (!isActive) {\n                                    e.target.style.backgroundColor = '#f5f5f5';\n                                  } else {\n                                    e.target.style.backgroundColor = '#6c4bd1';\n                                  }\n                                }}\n                              >\n                                {i}\n                              </button>\n                            </li>\n                          );\n                        }\n                        \n                        return pageNumbers;\n                      })()}\n                      \n                      {/* 다음 페이지 */}\n                      <li style={{ margin: '0 5px' }}>\n                        <button\n                          onClick={() => handlePageChange && handlePageChange(Math.min(data.totalPages, data.currentPage + 1))}\n                          disabled={data.currentPage === data.totalPages}\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            width: '32px',\n                            height: '32px',\n                            borderRadius: '4px',\n                            backgroundColor: '#f5f5f5',\n                            color: '#333',\n                            border: 'none',\n                            textDecoration: 'none',\n                            transition: 'all 0.3s ease',\n                            cursor: data.currentPage === data.totalPages ? 'not-allowed' : 'pointer',\n                            opacity: data.currentPage === data.totalPages ? 0.5 : 1,\n                            fontSize: '12px'\n                          }}\n                          onMouseEnter={(e) => {\n                            if (data.currentPage !== data.totalPages) {\n                              e.target.style.backgroundColor = '#e0e0e0';\n                            }\n                          }}\n                          onMouseLeave={(e) => {\n                            if (data.currentPage !== data.totalPages) {\n                              e.target.style.backgroundColor = '#f5f5f5';\n                            }\n                          }}\n                        >\n                          ›\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                </section>\n              )}\n\n              {/* 모바일 더보기 버튼 */}\n              {isMobile && enableInfiniteScroll && hasMore && (\n                <section className=\"globalWrapper w-full pb-5 md:pb-10\">\n                  <div className=\"flex justify-center\">\n                    <button\n                      ref={loadMoreButtonRef}\n                      onClick={() => handleLoadMore && handleLoadMore()}\n                      disabled={isLoadingMore}\n                      className=\"px-6 py-3 text-sm font-medium rounded-md transition-all duration-300 min-w-[120px]\"\n                      style={{\n                        backgroundColor: isLoadingMore ? '#f8f9fa' : '#6c4bd1',\n                        color: isLoadingMore ? '#666' : '#fff',\n                        border: `1px solid ${isLoadingMore ? '#ddd' : '#6c4bd1'}`,\n                        cursor: isLoadingMore ? 'not-allowed' : 'pointer',\n                        opacity: isLoadingMore ? 0.6 : 1\n                      }}\n                    >\n                      {isLoadingMore ? (\n                        <div className=\"flex items-center justify-center gap-2\">\n                          <div className=\"w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin\"></div>\n                          <span>{t('로딩 중...')}</span>\n                        </div>\n                      ) : (\n                        t('더보기')\n                      )}\n                    </button>\n                  </div>\n                </section>\n              )}\n\n              {/* 모바일 - 모든 상품을 본 경우 */}\n              {isMobile && enableInfiniteScroll && !hasMore && displayProducts.length > 0 && (\n                <section className=\"globalWrapper w-full pb-5 md:pb-10\">\n                  <div className=\"text-center\">\n                    <p className=\"text-sm text-gray-500 py-4\">\n                      {t('모든 상품을 보셨습니다.')}\n                    </p>\n                  </div>\n                </section>\n              )}\n            </>\n          )}\n        </>\n      ) : (\n        /* NoData 컴포넌트 재현 (원본과 동일) */\n        <section className=\"globalWrapper w-full\">\n          <div className=\"flex flex-col items-center gap-4 py-20 md:py-30 text-center\">\n            <div className=\"w-20 h-20\">\n              {/* ProductIcon SVG */}\n              <svg \n                className=\"w-full h-full text-black/20\" \n                viewBox=\"0 0 24 24\" \n                fill=\"none\" \n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path \n                  d=\"M3 3H5L5.4 5M7 13H17L21 5H5.4M7 13L5.4 5M7 13L4.70711 15.2929C4.07714 15.9229 4.52331 17 5.41421 17H17M17 13V17M17 17C15.8954 17 15 17.8954 15 19C15 20.1046 15.8954 21 17 21C18.1046 21 19 20.1046 19 19C19 17.8954 18.1046 17 17 17ZM9 19C9 20.1046 8.10457 21 7 21C5.89543 21 5 20.1046 5 19C5 17.8954 5.89543 17 7 17C8.10457 17 9 17.8954 9 19Z\" \n                  stroke=\"currentColor\" \n                  strokeWidth=\"1.5\" \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </div>\n            <h3 className=\"text-lg md:text-xl font-medium text-gray-800 m-0\">\n              {t('등록된 상품이 없습니다')}\n            </h3>\n            <p className=\"text-sm md:text-base leading-relaxed text-gray-600 m-0 whitespace-pre-line\">\n              {t('이 카테고리에는 아직 상품이 등록되지 않았습니다.\\n곧 새로운 상품들을 만나보실 수 있습니다.')}\n            </p>\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n\n// ✅ UMD 내보내기 (필수)\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = ProductListSkin;\n} else {\n  window.ProductListSkin = ProductListSkin; // 관리자에서 설정한 정확한 이름 사용\n}\n\nexport default ProductListSkin;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import ProductListSkin from './ProductListSkin';\n\nexport default ProductListSkin;\n\n// UMD 전역 내보내기 (필수)\nif (typeof window !== 'undefined') {\n  (window as any).ProductListSkin = ProductListSkin;\n}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__12__","ProductListSkin","_ref","_theme$colorset","_theme$colorset2","_theme$colorset3","data","actions","utils","options","t","formatCurrency","products","loading","showStock","itemsPerRow","handleAddToCart","handlePageChange","handleSearch","handleSortChange","handleLoadMore","_options$className","lg","className","_options$showPrice","itemsPerPage","categoryId","include_product_ids","exclude_product_ids","include_category_ids","exclude_category_ids","excludeIndexes","showPrice","_options$showAddToCar","showAddToCart","_options$showPaginati","showPagination","_options$enableInfini","enableInfiniteScroll","_options$backgroundCo","backgroundColor","_options$padding","padding","_options$borderRadius","borderRadius","_options$priceColor","priceColor","_options$cartButtonCo","cartButtonColor","_options$stockTextCol","stockTextColor","buttonColor","theme","getGridColumns","window","innerWidth","_React$useState2","_slicedToArray","React","gridColumns","setGridColumns","handleResize","addEventListener","removeEventListener","_React$useState4","isMobile","setIsMobile","checkMobile","mobileProducts","isLoadingMore","hasMore","currentPage","totalPages","displayProducts","loadMoreButtonRef","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","setTimeout","threshold","observe","disconnect","finalButtonColor","colorset","primaryColor","finalPriceColor","themeStyles","secondaryColor","tertiaryColor","style","textAlign","color","role","marginTop","concat","_objectSpread","length","gridTemplateColumns","map","product","key","id","onClick","e","target","closest","navigate","src","image","thumbnail","alt","name","preventDefault","stopPropagation","type","border","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","discountPercent","price","toLocaleString","originalPrice","isInStock","stockCount","reviewCount","rating","badges","badge","index","display","justifyContent","width","listStyle","margin","Math","max","disabled","alignItems","height","textDecoration","transition","cursor","opacity","fontSize","onMouseEnter","onMouseLeave","pageNumbers","startPage","floor","maxVisiblePages","endPage","min","_loop","i","isActive","push","fontWeight","ref","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","n","getter","__esModule","a","definition","o","Object","defineProperty","enumerable","get","hmd","create","children","set","Error","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"sourceRoot":""}