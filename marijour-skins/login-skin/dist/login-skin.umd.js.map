{"version":3,"file":"login-skin.umd.js","mappings":"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","sources":["webpack://LoginSkin/webpack/universalModuleDefinition","webpack://LoginSkin/external umd {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack://LoginSkin/./src/LoginSkin.tsx","webpack://LoginSkin/./src/index.ts","webpack://LoginSkin/webpack/bootstrap","webpack://LoginSkin/webpack/runtime/compat get default export","webpack://LoginSkin/webpack/runtime/define property getters","webpack://LoginSkin/webpack/runtime/harmony module decorator","webpack://LoginSkin/webpack/runtime/hasOwnProperty shorthand","webpack://LoginSkin/webpack/runtime/make namespace object","webpack://LoginSkin/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LoginSkin\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"LoginSkin\"] = factory(root[\"React\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__12__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","import React from 'react';\nimport { ComponentSkinProps } from './types';\nimport './login-skin.scss';\n\n// ✅ 프론트엔드 LoginLogic에 맞춘 Component Skin\nconst LoginSkin: React.FC<ComponentSkinProps> = ({ \n  data, \n  actions, \n  options, \n  mode,\n  utils, \n  app\n}) => {\n  const { t, cx } = utils;\n  \n  // ✅ LoginLogic에서 제공하는 데이터와 액션만 사용\n  const { \n    formData = {}, \n    loading = false, \n    loginSuccess = false,\n    loginError = null,\n    validationErrors = {},\n    theme = {}\n  } = data;\n  \n  const { handleSubmit, handleChange, handleSignupClick } = actions;\n  \n  // ✅ 속성 패널에서 설정 가능한 모든 옵션 (문서 가이드 기준)\n  const {\n    // 기본 설정\n    title = '로그인',\n    redirectPath = '/',\n    \n    // 배경 설정\n    backgroundType = 'image',\n    backgroundUrl = '',\n    \n    // 색상 설정\n    buttonColor = '#007bff',\n    titleColor = '#333333',\n    labelColor = '#333333',\n    inputTextColor = '#333333',\n    \n    // 기타 옵션\n    skin = 'basic'\n  } = options;\n  \n  // ✅ 동적 버튼 색상 설정 (속성 패널 옵션 > 테마 색상 순서로 우선순위)\n  const finalButtonColor = buttonColor || theme?.primaryColor || '#007bff';           // 속성 패널 버튼 색상 우선\n  const buttonTextColor = '#ffffff';                                                  // 텍스트 색상 (흰색)\n  const buttonHoverColor = theme?.primaryHoverColor || finalButtonColor || '#0056b3'; // 호버 색상\n\n  // ✅ 로그인 성공 시 UI\n  if (loginSuccess) {\n    return (\n      <div className=\"login-skin success\">\n        <div className=\"login-container\">\n          <h2>{t('로그인 성공!')}</h2>\n          <p>{t('환영합니다! 잠시 후 페이지가 이동됩니다.')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  // ✅ 배경 스타일 설정 (속성 패널 backgroundType 및 backgroundUrl 반영)\n  const getBackgroundStyle = (): React.CSSProperties => {\n    const baseStyle: React.CSSProperties = {\n      minHeight: '100vh',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '20px'\n    };\n\n    switch (backgroundType) {\n      case 'image':\n        return backgroundUrl ? {\n          ...baseStyle,\n          backgroundImage: `url(${backgroundUrl})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat'\n        } : {\n          ...baseStyle,\n          backgroundColor: '#f5f5f5'\n        };\n      \n      case 'video':\n        // 비디오 배경은 별도 처리 필요 (향후 구현)\n        return {\n          ...baseStyle,\n          backgroundColor: '#000'\n        };\n      \n      case 'none':\n      default:\n        return {\n          ...baseStyle,\n          backgroundColor: 'transparent'\n        };\n    }\n  };\n\n  // ✅ 테마 색상과 속성 패널 색상을 CSS 변수로 설정\n  const themeStyles = {\n    '--primary-color': finalButtonColor,\n    '--secondary-color': app?.theme?.colorset?.secondaryColor || '#FAFAF8',\n    '--tertiary-color': app?.theme?.colorset?.tertiaryColor || '#F5BF42',\n    '--title-color': titleColor,\n    '--label-color': labelColor,\n    '--input-text-color': inputTextColor\n  } as React.CSSProperties;\n\n  return (\n    <div className={cx ? cx('login-skin', loading && 'loading') : `login-skin ${loading ? 'loading' : ''}`} style={{...getBackgroundStyle(), ...themeStyles}}>\n      <div className=\"login-container\" style={{\n        backgroundColor: 'rgba(255, 255, 255, 0.95)',\n        padding: '40px',\n        borderRadius: '10px',\n        boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n        maxWidth: '400px',\n        width: '100%'\n      }}>\n        <h2 className=\"login-title\" style={{ \n          color: titleColor,\n          textAlign: 'center',\n          marginBottom: '30px',\n          fontSize: '28px',\n          fontWeight: '600'\n        }}>{title}</h2>\n        \n        {/* ✅ 로그인 에러 메시지 표시 */}\n        {loginError && (\n          <div className=\"error-message global-error\">\n            {t(loginError)}\n          </div>\n        )}\n        \n        <form className=\"login-form\" onSubmit={handleSubmit}>\n          <div className=\"form-fields\" style={{ marginBottom: '20px' }}>\n            <div style={{ marginBottom: '20px' }}>\n              <label htmlFor=\"user_id\" style={{\n                display: 'block',\n                marginBottom: '8px',\n                color: labelColor,\n                fontSize: '14px',\n                fontWeight: '500'\n              }}>\n                {t('아이디')}\n              </label>\n              <input\n                id=\"user_id\"\n                type=\"text\"\n                className={cx ? cx('form-input', validationErrors.user_id && 'error') : `form-input ${validationErrors.user_id ? 'error' : ''}`}\n                style={{\n                  width: '100%',\n                  padding: '12px 16px',\n                  fontSize: '16px',\n                  border: validationErrors.user_id ? '1px solid #dc3545' : '1px solid #ddd',\n                  borderRadius: '6px',\n                  color: inputTextColor,\n                  backgroundColor: '#fff',\n                  transition: 'border-color 0.2s',\n                  boxSizing: 'border-box'\n                }}\n                placeholder={t('아이디를 입력하세요')}\n                value={formData.user_id || ''}\n                onChange={handleChange}\n                disabled={loading}\n                autoComplete=\"username\"\n              />\n              {validationErrors.user_id && (\n                <span className=\"error-message\" style={{\n                  color: '#dc3545',\n                  fontSize: '12px',\n                  marginTop: '5px',\n                  display: 'block'\n                }}>{validationErrors.user_id}</span>\n              )}\n            </div>\n            \n            <div style={{ marginBottom: '20px' }}>\n              <label htmlFor=\"password\" style={{\n                display: 'block',\n                marginBottom: '8px',\n                color: labelColor,\n                fontSize: '14px',\n                fontWeight: '500'\n              }}>\n                {t('비밀번호')}\n              </label>\n              <input\n                id=\"password\"\n                type=\"password\"\n                className={cx ? cx('form-input', validationErrors.password && 'error') : `form-input ${validationErrors.password ? 'error' : ''}`}\n                style={{\n                  width: '100%',\n                  padding: '12px 16px',\n                  fontSize: '16px',\n                  border: validationErrors.password ? '1px solid #dc3545' : '1px solid #ddd',\n                  borderRadius: '6px',\n                  color: inputTextColor,\n                  backgroundColor: '#fff',\n                  transition: 'border-color 0.2s',\n                  boxSizing: 'border-box'\n                }}\n                placeholder={t('비밀번호를 입력하세요')}\n                value={formData.password || ''}\n                onChange={handleChange}\n                disabled={loading}\n                autoComplete=\"current-password\"\n              />\n              {validationErrors.password && (\n                <span className=\"error-message\" style={{\n                  color: '#dc3545',\n                  fontSize: '12px',\n                  marginTop: '5px',\n                  display: 'block'\n                }}>{validationErrors.password}</span>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"form-buttons\">\n            <button \n              type=\"submit\" \n              className=\"button primary\" \n              disabled={loading}\n              style={{ \n                width: '100%',\n                padding: '14px',\n                fontSize: '16px',\n                fontWeight: '600',\n                color: buttonTextColor,\n                backgroundColor: finalButtonColor,\n                border: 'none',\n                borderRadius: '6px',\n                cursor: loading ? 'not-allowed' : 'pointer',\n                opacity: loading ? 0.7 : 1,\n                transition: 'all 0.2s',\n                marginTop: '10px'\n              } as React.CSSProperties}\n              onMouseEnter={(e) => {\n                if (!loading) {\n                  e.currentTarget.style.backgroundColor = buttonHoverColor;\n                  e.currentTarget.style.transform = 'translateY(-2px)';\n                  e.currentTarget.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.15)';\n                }\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = finalButtonColor;\n                e.currentTarget.style.transform = 'translateY(0)';\n                e.currentTarget.style.boxShadow = 'none';\n              }}\n            >\n              {loading ? t('로그인 중...') : t('로그인')}\n            </button>\n            \n            {/* ✅ handleSignupClick 사용 또는 utils.navigate 폴백 */}\n            <button \n              type=\"button\" \n              className=\"button white\"\n              onClick={handleSignupClick || (() => utils.navigate('/signup'))}\n              disabled={loading}\n              style={{\n                width: '100%',\n                padding: '14px',\n                fontSize: '16px',\n                fontWeight: '600',\n                color: finalButtonColor,\n                backgroundColor: 'transparent',\n                border: `2px solid ${finalButtonColor}`,\n                borderRadius: '6px',\n                cursor: loading ? 'not-allowed' : 'pointer',\n                opacity: loading ? 0.7 : 1,\n                transition: 'all 0.2s',\n                marginTop: '10px'\n              }}\n              onMouseEnter={(e) => {\n                if (!loading) {\n                  e.currentTarget.style.backgroundColor = finalButtonColor;\n                  e.currentTarget.style.color = '#fff';\n                }\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = 'transparent';\n                e.currentTarget.style.color = finalButtonColor;\n              }}\n            >\n              {t('회원가입')}\n            </button>\n          </div>\n          \n          <div className=\"form-links\">\n            <a \n              href=\"#\" \n              onClick={(e) => {\n                e.preventDefault();\n                utils.navigate('/find-password');\n              }}\n              className=\"link\"\n            >\n              {t('비밀번호 찾기')}\n            </a>\n            <span className=\"divider\"></span>\n            <a \n              href=\"#\" \n              onClick={(e) => {\n                e.preventDefault();\n                utils.navigate('/guest-order-lookup');\n              }}\n              className=\"link\"\n            >\n              {t('비회원 주문 조회')}\n            </a>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// 기본 내보내기\nexport default LoginSkin;","import LoginSkin from './LoginSkin';\n\n// ✅ UMD 내보내기 방법 (회원가입 스킨과 동일)\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = LoginSkin;\n} else {\n    (window as any).LoginSkin = LoginSkin;\n}\n\nexport default LoginSkin;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(745);\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__12__","_ref","_app$theme","_app$theme2","data","actions","options","utils","mode","app","t","cx","_data$formData","formData","_data$loading","loading","_data$loginSuccess","loginSuccess","_data$loginError","loginError","_data$validationError","validationErrors","_data$theme","theme","handleSubmit","handleChange","handleSignupClick","_options$title","title","_options$backgroundTy","redirectPath","backgroundType","_options$backgroundUr","backgroundUrl","_options$buttonColor","buttonColor","_options$titleColor","titleColor","_options$labelColor","labelColor","_options$inputTextCol","inputTextColor","finalButtonColor","skin","primaryColor","buttonHoverColor","primaryHoverColor","React","className","themeStyles","colorset","secondaryColor","tertiaryColor","concat","style","_objectSpread","baseStyle","minHeight","display","alignItems","justifyContent","padding","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundColor","getBackgroundStyle","borderRadius","boxShadow","maxWidth","width","color","textAlign","marginBottom","fontSize","fontWeight","onSubmit","htmlFor","id","type","user_id","border","transition","boxSizing","placeholder","value","onChange","disabled","autoComplete","marginTop","password","cursor","opacity","onMouseEnter","e","currentTarget","transform","onMouseLeave","onClick","navigate","href","preventDefault","LoginSkin","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","hmd","create","children","set","Error","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"sourceRoot":""}